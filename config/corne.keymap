/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        base_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&none  &kp Q  &kp W  &kp E                 &kp R      &kp T            &lt 6 Y      &kp U                      &kp I               &kp O         &lt 4 P   &none
&none  &kp A  &kp S  &kp D                 &kp F      &kp G            &kp H        &kp J                      &kp K               &kp L         &kp SEMI  &none
&none  &kp Z  &kp X  &kp C                 &kp V      &kp B            &lt 3 N      &kp M                      &mt LEFT_ALT COMMA  &lt 1 PERIOD  &kp FSLH  &none
                     &mt LEFT_COMMAND DEL  &kp SPACE  &mt LCTRL TAB    &lt 2 ENTER  &mt RIGHT_SHIFT BACKSPACE  &mt RALT ESCAPE
            >;
        };

        firefly_code {
            bindings = <
&trans  &kp Y  &kp L  &kp W   &kp P   &kp B     &kp J    &kp F   &kp O           &kp U        &lt 4 APOS  &trans
&trans  &kp C  &kp R  &kp S   &kp T   &kp G     &kp M    &kp N   &kp E           &kp I        &kp A       &trans
&trans  &kp Q  &kp X  &kp V   &kp D   &kp K     &lt 3 Z  &kp H   &mt RALT SLASH  &lt 0 COMMA  &kp DOT     &trans
                      &trans  &trans  &trans    &trans   &trans  &trans
            >;
        };

        nums {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &kp N1           &kp N2    &kp N3                &kp N4                &kp N5                       &kp N6                           &kp N7                  &kp N8                  &kp N9          &kp N0           &none
&none  &kp AT           &kp HASH  &kp LEFT              &kp UP_ARROW          &mt LCTRL LEFT_BRACKET       &mt LEFT_GUI RIGHT_BRACKET       &kp DOWN                &kp RIGHT               &kp MINUS       &kp PLUS         &none
&none  &mt LCTRL CARET  &kp AMPS  &kp LC(LA(UP_ARROW))  &kp LS(LA(UP_ARROW))  &mt LALT LEFT_PARENTHESIS    &mt RIGHT_ALT RIGHT_PARENTHESIS  &kp LS(LA(DOWN_ARROW))  &kp LA(LC(DOWN_ARROW))  &mt LALT EQUAL  &mt LCTRL ASTRK  &none
                                  &tog 1                &kp SPACE             &lt 5 UNDER                  &trans                           &kp BACKSPACE           &kp RIGHT_SHIFT
            >;
        };

        funcs {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &kp F1         &kp F2     &kp F3             &kp F4             &kp F5               &kp F6         &kp F7        &kp F8           &kp F9      &kp F10  &none
&none  &kp BACKSLASH  &kp LC(A)  &kp LC(C)          &kp LS(LC(C))      &kp LC(LS(R))        &bt BT_SEL 0   &bt BT_SEL 1  &bt BT_SEL 2     &bt BT_CLR  &kp F11  &none
&none  &kp PIPE       &kp LC(X)  &kp HOME           &kp END            &kp LC(LG(SPACE))    &trans         &out OUT_USB  &out OUT_BLE     &kp INS     &kp F12  &none
                                 &mt LEFT_GUI CAPS  &kp LC(BACKSPACE)  &kp LS(ENTER)        &kp LC(ENTER)  &kp LA(F13)   &kp RIGHT_SHIFT
            >;
        };

        more_stuff {
            bindings = <
&trans  &kp EXCL              &kp LESS_THAN      &kp GRAVE                 &kp LS(LC(R))             &kp LS(LC(T))                &kp LG(LA(I))      &kp LA(LG(R))              &kp LA(LG(V))               &kp LA(LG(D))  &trans  &trans
&trans  &kp LC(LS(NUMBER_4))  &kp RA(MINUS)      &kp PERCENT               &kp LC(LEFT_BRACKET)      &kp SEMI                     &kp COLON          &kp LC(RIGHT_BRACKET)      &kp PRINTSCREEN             &kp TILDE      &trans  &trans
&trans  &kp LA(F4)            &kp RA(RS(MINUS))  &kp DOLLAR                &kp LC(LS(LEFT_BRACKET))  &kp GREATER_THAN             &kp QUESTION       &kp LC(LS(RIGHT_BRACKET))  &trans                      &trans         &trans  &trans
                                                 &kp LC(LA(LS(UP_ARROW)))  &kp LC(LS(TAB))           &mt BACKSPACE LG(LS(TAB))    &mt RSHFT LG(TAB)  &kp LC(TAB)                &kp LC(LA(LS(DOWN_ARROW)))
            >;
        };

        media_app {
            bindings = <
&trans  &kp KP_ENTER  &kp KP_N7  &kp KP_N8        &kp KP_NUMBER_9  &kp C_VOLUME_DOWN       &kp C_VOLUME_UP       &kp C_MUTE        &kp K_CONTEXT_MENU  &kp KP_NUMLOCK   &kp C_SLEEP      &trans
&trans  &kp KP_N0     &kp KP_N4  &kp KP_N5        &kp KP_N6        &kp C_BRIGHTNESS_DEC    &kp C_BRIGHTNESS_INC  &kp KP_DIVIDE     &kp KP_MULTIPLY     &kp KP_SUBTRACT  &kp KP_PLUS      &trans
&trans  &kp KP_DOT    &kp KP_N1  &kp KP_N2        &kp KP_N3        &kp C_PREV              &kp C_NEXT            &kp C_PLAY_PAUSE  &kp LC(LG(F13))     &kp LC(LG(F18))  &kp LS(LG(F23))  &trans
                                 &kp LC(LG(F14))  &kp LC(LG(F15))  &trans                  &trans                &kp LC(LS(F16))   &kp LC(LG(F17))
            >;
        };

        more_navigation {
            bindings = <
&trans  &kp LALT              &kp LCTRL             &kp LC(LS(R))           &kp LG(LC(Z))   &kp LC(GRAVE)         &trans         &kp LC(LG(U))  &trans             &kp RIGHT_GUI  &kp RALT  &trans
&trans  &trans                &trans                &kp LC(LS(PERIOD))      &kp LC(LS(F))   &kp LS(LC(G))         &trans         &trans         &trans             &trans         &trans    &trans
&trans  &kp LC(LS(NUMBER_5))  &kp LC(LS(NUMBER_6))  &kp LC(LS(N9))          &kp LC(LS(N7))  &kp LC(LS(N8))        &trans         &trans         &trans             &trans         &trans    &trans
                                                    &kp LC(LS(LEFT_ARROW))  &kp PG_UP       &kp LG(LEFT_ARROW)    &kp LG(RIGHT)  &kp PG_DN      &kp LC(LS(RIGHT))
            >;
        };
    };
};
